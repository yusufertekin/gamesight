- hosts: "~({{ app_env }}_app*)"
  vars:
    - ansible_user: "{{ deploy_user }}"
    - ansible_private_key_file: ~/.ssh/id_rsa
  pre_tasks:
    - name: Loading environment variables
      set_fact:
        DJANGO_SETTINGS_MODULE: '{{ django_settings_module }}'
  tasks:
    - name: Ensure .ssh directory exists.
      file:
        path: "{{ base_dir }}/.ssh"
        state: directory
        mode: 0700
        owner: "{{ deploy_user }}"
        group: "{{ deploy_group }}"

    - name: Ensure GitHub deploy key is present on the server.
      copy:
        src: "{{ deploy_private_key }}"
        dest: "{{ base_dir }}/.ssh/deploy_key"
        mode: 0600
        owner: "{{ deploy_user }}"
        group: "{{ deploy_group }}"

    - name: Clone the code repository to the docroot.
      git:
        repo: "{{ git_repo }}"
        dest: "{{ project_home }}"
        accept_hostkey: yes
        key_file: "{{ base_dir }}/.ssh/deploy_key"
      become_user: "{{ deploy_user }}"

    - name: Install base python requirements
      pip:
        requirements: "{{ project_home }}/requirements/base.txt" 
        virtualenv: "{{ app_venv_home }}"
        virtualenv_python: "/usr/bin/python3"

    - name: Install env python requirements
      pip:
        requirements: "{{ project_home }}/requirements/dev.txt" 
        virtualenv: "{{ app_venv_home }}"
        virtualenv_python: "/usr/bin/python3"
      when: "'vagrant' in group_names"

    - name: Install env python requirements
      pip:
        requirements: "{{ project_home }}/requirements/production.txt" 
        virtualenv: "{{ app_venv_home }}"
        virtualenv_python: "/usr/bin/python3"
      when: "'amazon' in group_names"

    - name: Copy over app.env file
      template:
        src: "app.env.j2"
        dest: "{{ project_home }}/app.env"
        owner: "{{ deploy_user }}"
        group: "{{ deploy_group }}"

    - name: Stop Nginx
      become: yes
      systemd:
        state: stopped
        name: nginx

    - name: Stop Gunicorn
      become: yes
      systemd:
        state: stopped
        name: gunicorn

    - name: Run migrations
      command: "{{ app_venv_python_bin }} {{ project_home }}/manage.py migrate"

    - name: Collect statics
      command: "{{ app_venv_python_bin }} {{ project_home }}/manage.py collectstatic --no-input"

    - name: Start Nginx
      become: yes
      systemd:
        state: started
        name: nginx

    - name: Start Gunicorn
      become: yes
      systemd:
        state: started
        name: gunicorn
